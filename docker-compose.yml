version: '3.8'

services:
  # Main application (FastAPI + Celery in one container)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: filecraft_app
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql://postgres:password@db:5432/filecraft
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
      - DB_HOSTNAME=db
      - REDIS_HOST=redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - filecraft

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: filecraft_db
    environment:
      POSTGRES_DB: filecraft
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - filecraft

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: filecraft_redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - filecraft

volumes:
  postgres_data:
  redis_data:

networks:
  filecraft:
    driver: bridge