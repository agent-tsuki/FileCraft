services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: file_craft
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8080:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis  # Redis for Celery
    restart: always
    networks:
      - file_craft

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - file_craft

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - file_craft

  # Celery worker for image processing
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: python worker.py
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - file_craft
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Flower for monitoring Celery
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flower
    command: celery -A app.celery_app flower --port=5555
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    ports:
      - "5555:5555"
    restart: always
    networks:
      - file_craft
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Celery beat scheduler for periodic tasks
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A app.celery_app beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always
    networks:
      - file_craft
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env
  #   depends_on:
  #     - celery_worker
  #   restart: always

  # flower:
  #   image: mher/flower
  #   container_name: flower
  #   command: flower --broker=redis://redis:6379/0
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - redis
  #   restart: always

volumes:
  pg_data:

networks:
  file_craft:
    driver: bridge
