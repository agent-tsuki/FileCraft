# =============================================================================
# RENDER DEPLOYMENT ENVIRONMENT VARIABLES
# =============================================================================
# Add these variables to your Render Web Service environment settings
# The same Docker image will work on Render with these environment variables

# ===== SECURITY (REQUIRED - CHANGE THESE!) =====
SECRET_KEY=your-super-secret-key-change-this-to-random-64-char-string
JWT_SECRET_KEY=your-jwt-secret-key-change-this-to-random-64-char-string

# ===== APPLICATION SETTINGS =====
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=info

# ===== CORS (UPDATE WITH YOUR RENDER URL) =====
CORS_ORIGINS=["https://your-app-name.onrender.com"]
ALLOWED_HOSTS=["your-app-name.onrender.com"]

# ===== DATABASE (Render PostgreSQL) =====
# Render will automatically provide DATABASE_URL
# These individual settings are fallbacks
DB_HOSTNAME=your-render-postgres-host
DB_PORT=5432
DB_DATABASE=your-render-db-name
DB_USER=your-render-db-user
DB_PASSWORD=your-render-db-password

# ===== REDIS (Render Redis) =====
# Render will automatically provide REDIS_URL
REDIS_HOST=your-render-redis-host
REDIS_PORT=6379
REDIS_DB=0

# ===== CELERY (Uses same Redis) =====
# These will use the REDIS_URL from Render
# CELERY_BROKER_URL will default to REDIS_URL
# CELERY_RESULT_BACKEND will default to REDIS_URL

# ===== FILE LIMITS (Render optimized) =====
MAX_UPLOAD_SIZE=104857600         # 100MB
MAX_IMAGE_SIZE_MB=20
MAX_AUDIO_SIZE_MB=50
MAX_VIDEO_SIZE_MB=100

# ===== PROCESSING =====
ENABLE_ASYNC_PROCESSING=true
MAX_CONCURRENT_TASKS=2           # Render resource limits
TASK_TIMEOUT=300
IMAGE_QUALITY_DEFAULT=80

# ===== EXTERNAL SERVICES (Disabled) =====
ENABLE_S3_STORAGE=false
ENABLE_EMAIL_NOTIFICATIONS=false
ENABLE_WEBHOOKS=false
ENABLE_METRICS=false

# ===== API DOCUMENTATION (Set to false for production security) =====
ENABLE_DOCS=false
ENABLE_SWAGGER_UI=false
ENABLE_REDOC=false

# =============================================================================
# RENDER DEPLOYMENT INSTRUCTIONS:
# =============================================================================
# 
# 1. Create a Web Service on Render:
#    - Connect your GitHub repository
#    - Build Command: docker build -t app .
#    - Start Command: Leave blank (handled by Dockerfile)
#
# 2. Add PostgreSQL Database:
#    - Create a PostgreSQL service
#    - Copy DATABASE_URL to your web service environment
#
# 3. Add Redis:
#    - Create a Redis service  
#    - Copy REDIS_URL to your web service environment
#
# 4. Environment Variables:
#    - Add the variables above to your web service
#    - Update CORS_ORIGINS and ALLOWED_HOSTS with your actual URL
#    - Generate strong SECRET_KEY and JWT_SECRET_KEY
#
# 5. Deploy:
#    - Your app runs both FastAPI and Celery in one container
#    - Health check: https://your-app.onrender.com/health
#    - API: https://your-app.onrender.com/api/v1/
#
# =============================================================================